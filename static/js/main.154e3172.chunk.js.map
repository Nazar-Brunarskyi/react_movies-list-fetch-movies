{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","memo","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onAdd","isMovieInTheList","useState","setTitle","setMovie","isLoading","setIsLoading","error","setErrorMessage","htmlFor","type","id","placeholder","value","onChange","event","currentTarget","disabled","onClick","query","preventDefault","fetch","then","res","json","catch","Response","Error","response","Poster","Title","Plot","imdbID","finally","movieToAdd","App","setMovies","setIsMovieInTheList","prevMovies","some","film","ReactDOM","render","document","getElementById"],"mappings":"6TAQaA,EAA6BC,gBACxC,gBAAGC,EAAH,EAAGA,MAAH,OACE,sBAAKC,UAAU,OAAO,UAAQ,YAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACE,UAAQ,cACRC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,aAAlC,SAAgDD,EAAMK,aAI1D,sBAAKJ,UAAU,UAAU,UAAQ,mBAAjC,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAS,UAAQ,WAAhC,8BC5BGC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,c,UCFNC,EAAuBd,gBAClC,YAAkC,IAA/Be,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,iBACR,EAA0BC,mBAAS,IAAnC,mBAAOX,EAAP,KAAcY,EAAd,KACA,EAA0BD,mBAAuB,MAAjD,mBAAOhB,EAAP,KAAckB,EAAd,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAiCJ,oBAAS,GAA1C,mBAAOK,EAAP,KAAcC,EAAd,KAuDA,OACE,qCACE,uBAAMrB,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQsB,QAAQ,cAAjC,yBAIA,qBAAKtB,UAAU,UAAf,SACE,uBACE,UAAQ,aACRuB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZzB,UAAU,kBACV0B,MAAOtB,EACPuB,SArBc,SAACC,GACzBZ,EAASY,EAAMC,cAAcH,OAC7BL,GAAgB,QAwBRD,GACE,mBAAGpB,UAAU,iBAAiB,UAAQ,eAAtC,kDAOFc,GACE,mBAAGd,UAAU,iBAAiB,UAAQ,eAAtC,8CAQN,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE,UAAQ,eACRuB,KAAK,SACLvB,UAAS,0BAAqBkB,GAAa,cAC3CY,UAAW1B,EACX2B,QAlGW,SACrBH,GCfC,IAAkBI,EDiBnBJ,EAAMK,iBACNd,GAAa,IClBMa,EDoBV5B,ECnBN8B,MAAM,GAAD,OAHE,2CAGF,cAAiBF,IAC1BG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,wBDgBJL,MAAK,SAAAM,GACJ,GAAI,UAAWA,EACb,MAAM,IAAID,MAAM,SAGlB,MAKIC,EAJFC,EADF,EACEA,OACAC,EAFF,EAEEA,MACAC,EAHF,EAGEA,KACAC,EAJF,EAIEA,OAOF5B,EAAS,CACPb,MAAOuC,EACPtC,YAAauC,EACb1C,OAPgC,QAAXwC,EACnB,4DACAA,EAMFnC,QAAQ,8BAAD,OAAgCsC,GACvClC,OAAQkC,OAGXP,OAAM,WACLjB,GAAgB,MAEjByB,SAAQ,kBAAM3B,GAAa,OA2DtB,SAOGpB,EAAQ,eAAiB,mBAI9B,qBAAKC,UAAU,UAAf,SAEID,GACE,wBACE,UAAQ,YACRwB,KAAK,SACLvB,UAAU,oBACV+B,QAAS,kBA1EEgB,EA0EsBhD,OAzE1CA,IAILc,EAAMkC,GAEN/B,EAAS,IACTC,EAAS,QARe,IAAC8B,GAsEb,qCAeRhD,GACE,sBAAKC,UAAU,YAAY,UAAQ,mBAAnC,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOA,aE1InBiD,EAAM,WACjB,MAA4BjC,mBAAkB,IAA9C,mBAAON,EAAP,KAAewC,EAAf,KACA,EAAgDlC,oBAAS,GAAzD,mBAAOD,EAAP,KAAyBoC,EAAzB,KAqBA,OACE,sBAAKlD,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQA,MAGtB,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CAAWc,iBAAkBA,EAAkBD,MA1BvC,SAACd,GACbkD,GAAU,SAACE,GAKT,OAJqBA,EAAWC,MAAM,SAAAC,GAAI,OACxCA,EAAK1C,SAAWZ,EAAMY,WAItBuC,GAAoB,GAEbC,GAGH,GAAN,mBACKA,GADL,CAEEpD,gBCpBRuD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.154e3172.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = memo(\n  ({ movie }) => (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={movie.imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {movie.description}\n          <br />\n          <a href={movie.imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  ),\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { FC, memo, useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ninterface Props {\n  onAdd: (movie: Movie) => void,\n  isMovieInTheList: boolean,\n}\n\nexport const FindMovie: FC<Props> = memo(\n  ({ onAdd, isMovieInTheList }) => {\n    const [title, setTitle] = useState('');\n    const [movie, setMovie] = useState<Movie | null>(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setErrorMessage] = useState(false);\n\n    const handleGetMovie = (\n      event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n    ) => {\n      event.preventDefault();\n      setIsLoading(true);\n\n      getMovie(title)\n        .then(response => {\n          if ('Error' in response) {\n            throw new Error('error');\n          }\n\n          const {\n            Poster,\n            Title,\n            Plot,\n            imdbID,\n          } = response as MovieData;\n\n          const posterForMovie = Poster === 'N/A'\n            ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            : Poster;\n\n          setMovie({\n            title: Title,\n            description: Plot,\n            imgUrl: posterForMovie,\n            imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n            imdbId: imdbID,\n          });\n        })\n        .catch(() => {\n          setErrorMessage(true);\n        })\n        .finally(() => setIsLoading(false));\n    };\n\n    const handleMovieAdding = (movieToAdd: Movie) => {\n      if (!movie) {\n        return;\n      }\n\n      onAdd(movieToAdd);\n\n      setTitle('');\n      setMovie(null);\n    };\n\n    const handleInputOfData = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setTitle(event.currentTarget.value);\n      setErrorMessage(false);\n    };\n\n    return (\n      <>\n        <form className=\"find-movie\">\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"movie-title\">\n              Movie title\n            </label>\n\n            <div className=\"control\">\n              <input\n                data-cy=\"titleField\"\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className=\"input is-dander\"\n                value={title}\n                onChange={handleInputOfData}\n              />\n            </div>\n\n            {\n              error && (\n                <p className=\"help is-danger\" data-cy=\"errorMessage\">\n                  Can&apos;t find a movie with such a title\n                </p>\n              )\n            }\n\n            {\n              isMovieInTheList && (\n                <p className=\"help is-danger\" data-cy=\"errorMessage\">\n                  movie is already in your list\n                </p>\n              )\n            }\n\n          </div>\n\n          <div className=\"field is-grouped\">\n            <div className=\"control\">\n              <button\n                data-cy=\"searchButton\"\n                type=\"submit\"\n                className={`button is-light ${isLoading && 'is-loading'}`}\n                disabled={!title}\n                onClick={handleGetMovie}\n              >\n                {movie ? 'Search Again' : 'Find a movie'}\n              </button>\n            </div>\n\n            <div className=\"control\">\n              {\n                movie && (\n                  <button\n                    data-cy=\"addButton\"\n                    type=\"button\"\n                    className=\"button is-primary\"\n                    onClick={() => handleMovieAdding(movie)}\n                  >\n                    Add to the list\n                  </button>\n                )\n              }\n            </div>\n          </div>\n        </form>\n\n        {\n          movie && (\n            <div className=\"container\" data-cy=\"previewContainer\">\n              <h2 className=\"title\">Preview</h2>\n              <MovieCard movie={movie} />\n            </div>\n          )\n        }\n      </>\n    );\n  },\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=ccf53c59';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [isMovieInTheList, setIsMovieInTheList] = useState(false);\n\n  const onAdd = (movie: Movie) => {\n    setMovies((prevMovies) => {\n      const isMovieAdded = prevMovies.some((film => (\n        film.imdbId === movie.imdbId\n      )));\n\n      if (isMovieAdded) {\n        setIsMovieInTheList(true);\n\n        return prevMovies;\n      }\n\n      return [\n        ...prevMovies,\n        movie,\n      ];\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie isMovieInTheList={isMovieInTheList} onAdd={onAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}